{"remainingRequest":"C:\\xampp\\htdocs\\reunionou-web_app-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\xampp\\htdocs\\reunionou-web_app-main\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\xampp\\htdocs\\reunionou-web_app-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\reunionou-web_app-main\\src\\views\\Invitation.vue?vue&type=template&id=67b934d3&","dependencies":[{"path":"C:\\xampp\\htdocs\\reunionou-web_app-main\\src\\views\\Invitation.vue","mtime":1648459824256},{"path":"C:\\xampp\\htdocs\\reunionou-web_app-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648453903687},{"path":"C:\\xampp\\htdocs\\reunionou-web_app-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1648453916668},{"path":"C:\\xampp\\htdocs\\reunionou-web_app-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648453903687},{"path":"C:\\xampp\\htdocs\\reunionou-web_app-main\\node_modules\\vue-loader\\lib\\index.js","mtime":1648453912712}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}